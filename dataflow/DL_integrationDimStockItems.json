{
	"name": "DL_integrationDimStockItems",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "odsWarehouseStockItems",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "odsWarehouseColors",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "odsWarehusePackageTypes",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "integrationDimStockItem",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join2"
				},
				{
					"name": "select3"
				},
				{
					"name": "join3"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StockItemID as integer,",
				"          StockItemName as string,",
				"          SupplierID as integer,",
				"          ColorID as integer,",
				"          UnitPackageID as integer,",
				"          OuterPackageID as integer,",
				"          Brand as string,",
				"          Size as string,",
				"          LeadTimeDays as integer,",
				"          QuantityPerOuter as integer,",
				"          IsChillerStock as boolean,",
				"          Barcode as string,",
				"          TaxRate as decimal(18,3),",
				"          UnitPrice as decimal(18,2),",
				"          RecommendedRetailPrice as decimal(18,2),",
				"          TypicalWeightPerUnit as decimal(18,3),",
				"          MarketingComments as string,",
				"          InternalComments as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          Tags as string,",
				"          SearchDetails as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          ColorID as integer,",
				"          ColorName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          PackageTypeID as integer,",
				"          PackageTypeName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source1 select(mapColumn(",
				"          StockItemID,",
				"          StockItemName,",
				"          ColorID,",
				"          UnitPackageID,",
				"          OuterPackageID,",
				"          Brand,",
				"          Size,",
				"          LeadTimeDays,",
				"          QuantityPerOuter,",
				"          IsChillerStock,",
				"          Barcode,",
				"          TaxRate,",
				"          UnitPrice,",
				"          RecommendedRetailPrice,",
				"          TypicalWeightPerUnit,",
				"          Photo,",
				"          ValidFrom,",
				"          ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, source2 join(select1@ColorID == source2@ColorID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          StockItemID,",
				"          StockItemName,",
				"          ColorID = select1@ColorID,",
				"          UnitPackageID,",
				"          OuterPackageID,",
				"          Brand,",
				"          Size,",
				"          LeadTimeDays,",
				"          QuantityPerOuter,",
				"          IsChillerStock,",
				"          Barcode,",
				"          TaxRate,",
				"          UnitPrice,",
				"          RecommendedRetailPrice,",
				"          TypicalWeightPerUnit,",
				"          Photo,",
				"          ValidFrom = select1@ValidFrom,",
				"          ValidTo = select1@ValidTo,",
				"          ColorID = source2@ColorID,",
				"          ColorName,",
				"          LastEditedBy,",
				"          ValidFrom = source2@ValidFrom,",
				"          ValidTo = source2@ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, source3 join(UnitPackageID == PackageTypeID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          StockItemID,",
				"          StockItemName,",
				"          ColorID,",
				"          UnitPackageID,",
				"          OuterPackageID,",
				"          Brand,",
				"          Size,",
				"          LeadTimeDays,",
				"          QuantityPerOuter,",
				"          IsChillerStock,",
				"          Barcode,",
				"          TaxRate,",
				"          UnitPrice,",
				"          RecommendedRetailPrice,",
				"          TypicalWeightPerUnit,",
				"          Photo,",
				"          ValidFrom = select2@ValidFrom,",
				"          ValidTo = select2@ValidTo,",
				"          ColorName,",
				"          LastEditedBy = select2@LastEditedBy,",
				"          PackageTypeID,",
				"          PackageTypeName,",
				"          LastEditedBy = source3@LastEditedBy,",
				"          ValidFrom = source3@ValidFrom,",
				"          ValidTo = source3@ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3, source3 join(OuterPackageID == source3@PackageTypeID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          StockItemID,",
				"          StockItemName,",
				"          Brand,",
				"          Size,",
				"          LeadTimeDays,",
				"          QuantityPerOuter,",
				"          IsChillerStock,",
				"          Barcode,",
				"          TaxRate,",
				"          UnitPrice,",
				"          RecommendedRetailPrice,",
				"          TypicalWeightPerUnit,",
				"          Photo,",
				"          ValidFrom = select3@ValidFrom,",
				"          ValidTo = select3@ValidTo,",
				"          ColorName,",
				"          SellingPackage = select3@PackageTypeName,",
				"          BuyingPackage = source3@PackageTypeName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 derive(ColorName = iifNull(ColorName, \" \", ColorName),",
				"          Brand = iifNull(Brand, \" \", Brand),",
				"          Size = iifNull(Size, \" \", Size),",
				"          LeadTimeDays = iifNull(LeadTimeDays, 0, LeadTimeDays),",
				"          QuantityPerOuter = iifNull(QuantityPerOuter, 0, QuantityPerOuter),",
				"          SellingPackage = iifNull(SellingPackage, \" \", SellingPackage),",
				"          BuyingPackage = iifNull(BuyingPackage, \" \",BuyingPackage),",
				"          TaxRate = iifNull(TaxRate, 0, TaxRate),",
				"          UnitPrice = iifNull(UnitPrice, 0, UnitPrice)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Stock Item Staging Key} as integer,",
				"          {WWI Stock Item ID} as integer,",
				"          {Stock Item} as string,",
				"          Color as string,",
				"          {Selling Package} as string,",
				"          {Buying Package} as string,",
				"          Brand as string,",
				"          Size as string,",
				"          {Lead Time Days} as integer,",
				"          {Quantity Per Outer} as integer,",
				"          {Is Chiller Stock} as boolean,",
				"          Barcode as string,",
				"          {Tax Rate} as decimal(18,3),",
				"          {Unit Price} as decimal(18,2),",
				"          {Recommended Retail Price} as decimal(18,2),",
				"          {Typical Weight Per Unit} as decimal(18,3),",
				"          Photo as binary,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          {WWI Stock Item ID} = StockItemID,",
				"          {Stock Item} = StockItemName,",
				"          Color = ColorName,",
				"          {Selling Package} = SellingPackage,",
				"          {Buying Package} = BuyingPackage,",
				"          Brand,",
				"          Size,",
				"          {Lead Time Days} = LeadTimeDays,",
				"          {Quantity Per Outer} = QuantityPerOuter,",
				"          {Is Chiller Stock} = IsChillerStock,",
				"          Barcode,",
				"          {Tax Rate} = TaxRate,",
				"          {Unit Price} = UnitPrice,",
				"          {Recommended Retail Price} = RecommendedRetailPrice,",
				"          {Typical Weight Per Unit} = TypicalWeightPerUnit,",
				"          Photo,",
				"          {Valid From} = ValidFrom,",
				"          {Valid To} = ValidTo",
				"     )) ~> sink1"
			]
		}
	}
}
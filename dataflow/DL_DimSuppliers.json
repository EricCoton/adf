{
	"name": "DL_DimSuppliers",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "integrationDimSuppliers",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DimSuppliers",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimSuppliers",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Supplier Staging Key} as integer,",
				"          {WWI Supplier ID} as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          {Primary Contact} as string,",
				"          {Supplier Reference} as string,",
				"          {Payment Days} as integer,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          SupplierKey as integer,",
				"          WWISupplierID as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          PrimaryContact as string,",
				"          SupplierReference as string,",
				"          PaymentDays as integer,",
				"          PostalCode as string,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp,",
				"          LineageKey as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 derive(lineageKey = toInteger(toString(currentUTC()))) ~> derivedColumn1",
				"derivedColumn1 derive(lineageKey = iifNull(lineageKey, 0, lineageKey)) ~> derivedColumn2",
				"source2 window(over(WWISupplierID),",
				"     desc(ValidTo, true),",
				"     asc(ValidFrom, true),",
				"     rank = rank()) ~> window1",
				"derivedColumn2 aggregate(groupBy({WWI Supplier ID}),",
				"     validToSource = min({Valid From})) ~> aggregate1",
				"aggregate1, window1 join({WWI Supplier ID} == WWISupplierID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          validTo = validToSource,",
				"          SupplierKey,",
				"          WWISupplierID,",
				"          Supplier,",
				"          Category,",
				"          PrimaryContact,",
				"          SupplierReference,",
				"          PaymentDays,",
				"          PostalCode,",
				"          ValidFrom,",
				"          LineageKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 alterRow(updateIf(true())) ~> AlterRow1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SupplierKey as integer,",
				"          WWISupplierID as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          PrimaryContact as string,",
				"          SupplierReference as string,",
				"          PaymentDays as integer,",
				"          PostalCode as string,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp,",
				"          LineageKey as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SupplierKey'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SupplierKey,",
				"          WWISupplierID,",
				"          Supplier,",
				"          Category,",
				"          PrimaryContact,",
				"          SupplierReference,",
				"          PaymentDays,",
				"          PostalCode,",
				"          ValidFrom,",
				"          ValidTo = validTo,",
				"          LineageKey",
				"     )) ~> sink1"
			]
		}
	}
}